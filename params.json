{"name":"Distance of Date in Words","tagline":"FileMaker custom function to report the approximate distance in time between two dates as words.","body":"# distanceOfDateInWords FileMaker Custom Function\r\n\r\nFileMaker custom function to report the approximate distance in time between two dates as words.\r\n\r\n## Introduction\r\n\r\ndistanceOfDateInWords is a FileMaker custom function to express a time interval in words, given two input dates.\r\n\r\n## Syntax\r\n\r\ndistanceOfDateInWords(firstDate, secondDate)\r\n\r\n## Dates in the Past\r\n\r\nIf the first date is more than 720 days before the second date, the custom function returns an approximate number of years in the form \"over XXX years ago\"\r\n\r\nIf the first date is between 720 days and 61 days before the second date, the custom function returns an approximate number of months in the form \"about XXX months ago\"\r\n\r\nIf the first date is 60 days or less before the second date, the custom function returns a number of days in the form \"XXX days ago\"\r\n\r\n## Dates Nearby\r\n\r\nIf the first date is 1 day before the second date, the custom function returns \"yesterday\"\r\n\r\nIf the first date is the same as the second date, the custom function returns \"today\"\r\n\r\nIf the first date is 1 day after the second date, the custom function returns \"tomorrow\"\r\n\r\n## Dates in the Future\r\n\r\nIf the first date is 60 days or less after the second date, the custom function returns a number of days in the form \"XXX days time\"\r\n\r\nIf the first date is between 61 days and 720 days after the second date, the custom function returns an approximate number of months in the form \"about XXX months time\"\r\n\r\nIf the first date is more than 720 days after the second date, the custom function returns an approximate number of years in the form \"over XXX years time\"\r\n\r\n## Examples\r\n\r\n\tdistanceOfDateInWords(Date (1, 20, 2012), Date (1, 20, 2014)) => over 2 years ago\r\n\r\n\tdistanceOfDateInWords(Date (1, 20, 2013), Date (1, 20, 2014)) => about 12 months ago\r\n\t\r\n\tdistanceOfDateInWords(Date (10, 20, 2013), Date (1, 20, 2014)) => about 3 months ago\r\n\t\r\n\tdistanceOfDateInWords(Date (11, 20, 2013), Date (1, 20, 2014)) => about 2 months ago\r\n\t\r\n\tdistanceOfDateInWords(Date (11, 21, 2013), Date (1, 20, 2014)) => 60 days ago\r\n\t\r\n\tdistanceOfDateInWords(Date (1, 2, 2014), Date (1, 20, 2014)) => 18 days ago\r\n\t\r\n\tdistanceOfDateInWords(Date (1, 18, 2014), Date (1, 20, 2014)) => 2 days ago\r\n\t\r\n\tdistanceOfDateInWords(Date (1, 19, 2014), Date (1, 20, 2014)) => yesterday\r\n\t\r\n\tdistanceOfDateInWords(Date (1, 20, 2014), Date (1, 20, 2014)) => today\r\n\t\r\n\tdistanceOfDateInWords(Date (1, 21, 2014), Date (1, 20, 2014)) => tomorrow\r\n\t\r\n\tdistanceOfDateInWords(Date (1, 22, 2014), Date (1, 20, 2014)) => 2 days time\r\n\t\r\n\tdistanceOfDateInWords(Date (2, 7, 2014), Date (1, 20, 2014)) => 18 days time\r\n\t\r\n\tdistanceOfDateInWords(Date (3, 21, 2014), Date (1, 20, 2014)) => 60 days time\r\n\t\r\n\tdistanceOfDateInWords(Date (3, 22, 2014), Date (1, 20, 2014)) => about 2 months time\r\n\t\r\n\tdistanceOfDateInWords(Date (4, 20, 2014), Date (1, 20, 2014)) => about 3 months time\r\n\t\r\n\tdistanceOfDateInWords(Date (1, 20, 2015), Date (1, 20, 2014)) => about 12 months time\r\n\t\r\n\tdistanceOfDateInWords(Date (1, 20, 2016), Date (1, 20, 2014)) => over 2 years time\r\n\t\r\n## Credit\r\n\r\nInspired by and adapted from [10-patches] (https://github.com/edavis10/redmine/blob/master/config/initializers/10-patches.rb) to [Redmine] (https://github.com/edavis10/redmine)\r\n\r\n## Contact\r\n\r\nComments and bug reports are welcome.\r\n\r\n## Contributing\r\n\r\nFeel free to drop us a line to let us know you would like to work on something or if you have an idea. Otherwise, fork, code, commit, push and create pull request, *viz*:\r\n\r\n1. Create a fork of the repo from http://github.com/cantab/distanceOfDateInWords\r\n2. Create your feature branch (`git checkout -b new-feature`).\r\n2. Write some tests (if possible).\r\n3. Write the code that allows the tests to pass.\r\n3. Commit your changes (`git commit -am 'Add some feature'`).\r\n4. Push to the branch (`git push origin new-feature`).\r\n5. Create a new [Pull Request] (https://help.github.com/articles/using-pull-requests).\r\n\r\nMore details on how to contribute can be found at this great Thoughtbot blogpost [8 (new) steps for fixing other people's code] (http://robots.thoughtbot.com/8-new-steps-for-fixing-other-peoples-code).\r\n\r\n## License\r\n\r\nCopyright (c) 2013-2014 Chong-Yee Khoo. All rights reserved.\r\n\r\nMIT License\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n\"Software\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}